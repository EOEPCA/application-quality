[{"model": "backend.pipeline", "pk": "python", "fields": {"description": "python pipeline", "template": "#!/usr/bin/env cwltool\r\n\r\n$graph:\r\n- class: Workflow\r\n\r\n  requirements:\r\n    SubworkflowFeatureRequirement: {}\r\n\r\n  inputs:\r\n    pipeline_id:\r\n      type: string\r\n    repo_branch:\r\n      type: string\r\n    repo_url:\r\n      type: string\r\n    run_id:\r\n      type: string\r\n    server_url:\r\n      type: string\r\n\r\n  outputs: []\r\n\r\n  steps:\r\n    clone_step:\r\n      in:\r\n        repo_url: repo_url\r\n        repo_branch: repo_branch\r\n      run: '#clone-tool.cwl'\r\n      out:\r\n      - repo_directory\r\n    {% for tool in tools %}{{ tool.workflow_step | indent(4) }}\r\n    {% endfor %}\r\n  id: '#main'\r\n\r\n- class: CommandLineTool\r\n\r\n  requirements:\r\n    DockerRequirement:\r\n      dockerPull: alpine/git\r\n    InlineJavascriptRequirement: {}\r\n\r\n  inputs:\r\n    repo_branch:\r\n      type: string\r\n      default: main\r\n    repo_url:\r\n      type: string\r\n\r\n  outputs:\r\n    repo_directory:\r\n      type: Directory\r\n      outputBinding:\r\n        glob: $(inputs.repo_url.split('/').pop().replace('.git',''))\r\n\r\n  baseCommand: git\r\n  arguments:\r\n  - clone\r\n  - $(inputs.repo_url)\r\n  - -b\r\n  - $(inputs.repo_branch)\r\n  id: '#clone-tool.cwl'\r\n{% for tool in tools %}\r\n{{ tool.definition }}\r\n{% endfor %}\r\ncwlVersion: v1.0", "version": "0.1", "tools": ["flake8_workflow", "pylint_workflow"]}}, {"model": "backend.tag", "pk": 1, "fields": {"name": "python"}}, {"model": "backend.tool", "pk": "flake8_workflow", "fields": {"name": "flake8_workflow", "description": "flake8 - Style guide enforcement tool for Python", "workflow_step": "flake8_workflow:\r\n  in:\r\n    pipeline_id: pipeline_id\r\n    repo_path: clone_step/repo_directory\r\n    run_id: run_id\r\n    server_url: server_url\r\n  run: '#flake8-workflow.cwl'\r\n  out:\r\n  - flake8_report", "definition": "- class: Workflow\r\n\r\n  inputs:\r\n    flake8_step_id:\r\n      type: string\r\n      default: 2-flake8\r\n    pipeline_id:\r\n      type: string\r\n    repo_path:\r\n      type: Directory\r\n    run_id:\r\n      type: string\r\n    server_url:\r\n      type: string\r\n\r\n  outputs:\r\n    flake8_report:\r\n      type: File\r\n      outputSource: flake8_step/flake8_report\r\n\r\n  steps:\r\n    flake8_step:\r\n      in:\r\n        source_directory: repo_path\r\n      run: '#flake8-tool.cwl'\r\n      out:\r\n      - flake8_report\r\n    save_flake8_step:\r\n      in:\r\n        pipeline_id: pipeline_id\r\n        report: flake8_step/flake8_report\r\n        run_id: run_id\r\n        server_url: server_url\r\n        step_id: flake8_step_id\r\n      run: '#save-flake8-tool.cwl'\r\n      out: []\r\n  id: '#flake8-workflow.cwl'\r\n- class: CommandLineTool\r\n\r\n  requirements:\r\n    DockerRequirement:\r\n      dockerPull: eoepca/appquality-flake8-json:v0.1.0\r\n\r\n  inputs:\r\n    source_directory:\r\n      type: Directory\r\n      inputBinding:\r\n        position: 1\r\n\r\n  outputs:\r\n    flake8_report:\r\n      type: File\r\n      outputBinding:\r\n        glob: flake8_report.json\r\n  stdout: flake8_report.json\r\n\r\n  baseCommand: flake8\r\n  arguments:\r\n  - --format=json\r\n  id: '#flake8-tool.cwl'\r\n- class: CommandLineTool\r\n\r\n  requirements:\r\n    DockerRequirement:\r\n      dockerPull: curlimages/curl\r\n    InlineJavascriptRequirement: {}\r\n\r\n  inputs:\r\n    pipeline_id:\r\n      type: string\r\n    report:\r\n      type: File\r\n    run_id:\r\n      type: string\r\n    server_url:\r\n      type: string\r\n    step_id:\r\n      type: string\r\n\r\n  outputs: []\r\n\r\n  baseCommand: curl\r\n  arguments:\r\n  - prefix: -X\r\n    valueFrom: POST\r\n  - prefix: -L\r\n    valueFrom: |-\r\n      $('http://' + inputs.server_url + '/api/pipelines/' + inputs.pipeline_id + '/runs/' + inputs.run_id + '/jobreports/?name=flake8')\r\n  - prefix: -H\r\n    valueFrom: Content-Type:application/json\r\n  - prefix: -d\r\n    valueFrom: $('@' + inputs.report.path)\r\n  id: '#save-flake8-tool.cwl'", "is_cwl": true, "version": "0.1", "tags": [1], "tools": []}}, {"model": "backend.tool", "pk": "pylint_workflow", "fields": {"name": "pylint_workflow", "description": "pylint - Static code analyser tool for Python", "workflow_step": "pylint_workflow:\r\n  in:\r\n    pipeline_id: pipeline_id\r\n    repo_path: clone_step/repo_directory\r\n    run_id: run_id\r\n    server_url: server_url\r\n  run: '#pylint-workflow.cwl'\r\n  out:\r\n  - pylint_report", "definition": "- class: Workflow\r\n\r\n  inputs:\r\n    pylint_step_id:\r\n      type: string\r\n      default: 2-pylint\r\n    pipeline_id:\r\n      type: string\r\n    repo_path:\r\n      type: Directory\r\n    run_id:\r\n      type: string\r\n    server_url:\r\n      type: string\r\n\r\n  outputs:\r\n    pylint_report:\r\n      type: File\r\n      outputSource: pylint_step/pylint_report\r\n\r\n  steps:\r\n    pylint_step:\r\n      in:\r\n        source_directory: repo_path\r\n      run: '#pylint-tool.cwl'\r\n      out:\r\n      - pylint_report\r\n    save_pylint_step:\r\n      in:\r\n        pipeline_id: pipeline_id\r\n        report: pylint_step/pylint_report\r\n        run_id: run_id\r\n        server_url: server_url\r\n        step_id: pylint_step_id\r\n      run: '#save-pylint-tool.cwl'\r\n      out: []\r\n  id: '#pylint-workflow.cwl'\r\n- class: CommandLineTool\r\n\r\n  requirements:\r\n    DockerRequirement:\r\n      dockerPull: cytopia/pylint\r\n    InlineJavascriptRequirement: {}\r\n\r\n  inputs:\r\n    source_directory:\r\n      type: Directory\r\n      inputBinding:\r\n        position: 1\r\n        valueFrom: $(inputs.source_directory.path + \"/**/*.py\")\r\n\r\n  outputs:\r\n    pylint_report:\r\n      type: File\r\n      outputBinding:\r\n        glob: pylint_report.json\r\n\r\n  baseCommand: pylint\r\n  arguments:\r\n  - --output-format=json\r\n  - --output=pylint_report.json\r\n  - --exit-zero\r\n  id: '#pylint-tool.cwl'\r\n- class: CommandLineTool\r\n\r\n  requirements:\r\n    DockerRequirement:\r\n      dockerPull: curlimages/curl\r\n    InlineJavascriptRequirement: {}\r\n\r\n  inputs:\r\n    pipeline_id:\r\n      type: string\r\n    report:\r\n      type: File\r\n    run_id:\r\n      type: string\r\n    server_url:\r\n      type: string\r\n    step_id:\r\n      type: string\r\n\r\n  outputs: []\r\n\r\n  baseCommand: curl\r\n  arguments:\r\n  - prefix: -X\r\n    valueFrom: POST\r\n  - prefix: -L\r\n    valueFrom: |-\r\n      $('http://' + inputs.server_url + '/api/pipelines/' + inputs.pipeline_id + '/runs/' + inputs.run_id + '/jobreports/?name=pylint')\r\n  - prefix: -H\r\n    valueFrom: Content-Type:application/json\r\n  - prefix: -d\r\n    valueFrom: $('@' + inputs.report.path)\r\n  id: '#save-pylint-tool.cwl'", "is_cwl": true, "version": "0.1", "tags": [1], "tools": []}}]