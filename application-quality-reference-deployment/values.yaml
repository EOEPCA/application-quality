
global:
  ## The internal cluster (sub)domain for services in this deployment,
  ## typically <namespace>.svc.cluster.local
  internalDomain: "svc.cluster.local"

  ## A certificate issues for the above domain
  defaultInternalIssuerRef:
    kind: ClusterIssuer
    ## INSTRUCTION: Set to name of certificate issuer for the internal cluster domain
    name: eoepca-ca-clusterissuer

  defaultExternalIssuerRef:
    kind: ClusterIssuer
    ## INSTRUCTION: Set to name of certificate issuer for published services
    name: letsencrypt-prod

application-quality:
  # Values for deploying the Application Quality Building Block in the EOEPCA Develop cluster.

  namespace:
    application-quality

  # Application Quality backend
  api:
    image:
      repository: eoepca/eoepca-appquality-backend
      tag: 2.0.0-rc1

  # Application Quality frontend
  web:
    image:
      repository: eoepca/eoepca-appquality-frontend
      tag: 2.0.0-rc1
    publicUrl: "https://application-quality.develop.eoepca.org"

  persistence:
    enabled: true
    storageClassName: managed-nfs-storage-retain
    createStorageClass: false
    accessMode:
    - ReadWriteOnce
    size: 2Gi

  calrissian:
    image: "terradue/calrissian:0.14.0"
    storageClassName: managed-nfs-storage-retain
    volumeSize: "2Gi"
    maxCores: "2"
    maxRam: "2Gi"

  vclusters:
    enabled: false

  grafana:
    enabled: true

  oidc:
    enabled: true
    realmBaseUrl: "https://iam-auth.apx.develop.eoepca.org/realms/eoepca"
    clientId: application-quality-bb
    clientSecret: ""
    postLogoutRedirectUrl: "https://application-quality.develop.eoepca.org/"
    loginRedirectUrl: "https://application-quality.develop.eoepca.org/"
    rpRedirectUri: "https://application-quality.develop.eoepca.org/"

  sonarqube:
    enabled: false
    serverUrl: application-quality-sonarqube-sonarqube.application-quality.svc.cluster.local:9000
    accessToken: ""

  ingress:
    enabled: true
    className: nginx
    domain: application-quality.develop.eoepca.org
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    tls:
      - hosts:
        - application-quality.develop.eoepca.org
        secretName: application-quality-tls

  service:
    type: ClusterIP
    port: 80

# https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  rbac:
    create: false
  serviceAccount:
    create: false
  autoscaling:
    enabled: false
  testFramework:
    enabled: false
  # Enable creating the grafana configmap
  createConfigmap: true

  # Extra configmaps to mount in grafana pods
  # Values are templated.
  extraConfigmapMounts: []
    # - name: certs-configmap
    #   mountPath: /etc/grafana/ssl/
    #   subPath: certificates.crt # (optional)
    #   configMap: certs-configmap
    #   readOnly: true
    #   optional: false
  
  extraEmptyDirMounts: []
    # - name: provisioning-notifiers
    #   mountPath: /etc/grafana/provisioning/notifiers

  podPortName: grafana
  gossipPortName: gossip
  ## Deployment annotations
  # annotations: {}

  service:
    # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml#L231
    enabled: true
    type: ClusterIP
    port: 80
    targetPort: 3000
  
  hostAliases: []

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - application-quality.develop.eoepca.org
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    path: /dashboards/?(.*)
    pathType: Prefix
    tls:
      - secretName: application-quality-tls
        hosts:
          - application-quality.develop.eoepca.org

  persistence:
    type: pvc
    enabled: true
    storageClassName: managed-nfs-storage-retain
    volumeName: application-quality-grafana-pvc
    accessModes:
      - ReadWriteOnce
    size: 1Gi

  admin:
    ## Name of the secret. Can be templated.
    existingSecret: ""
    userKey: admin-user
    passwordKey: admin-password

  ## Pass the plugins you want installed as a list.
  ##
  plugins: []
    # - digrich-bubblechart-panel
    # - grafana-clock-panel

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: "Application Quality DB (Admin)"
          type: postgres
          url: application-quality-core-db.application-quality.svc.cluster.local:5432
          user: admin
          secureJsonData:
            password: changeme
          jsonData:
            database: appquality
            sslmode: "disable" # disable/require/verify-ca/verify-full
            maxOpenConns: 100
            maxIdleConns: 100
            maxIdleConnsAuto: true
            connMaxLifetime: 14400
            postgresVersion: 1300 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
            timescaledb: false
  
  alerting: {}
  notifiers: {}
  dashboardProviders: {}
  dashboards: {}
  dashboardsConfigMaps: {}

  envFromSecret: application-quality-grafana-dashboards-oauth-config

  grafana.ini:

    # https://grafana.com/docs/grafana/next/setup-grafana/configure-security/configure-authentication/generic-oauth/
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      auto_login: false
      #team_ids:
      #allowed_organizations:
      name: "OAuth / OIDC"
      #client_id: -- Found in GF_AUTH_GENERIC_OAUTH_CLIENT_ID
      #client_secret: -- Found in GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
      scopes: openid roles profile user_name email
      auth_url: https://auth.eoepca-testing.spaceapplications.com/realms/eoepca/protocol/openid-connect/auth
      token_url: https://auth.eoepca-testing.spaceapplications.com/realms/eoepca/protocol/openid-connect/token
      api_url: https://auth.eoepca-testing.spaceapplications.com/realms/eoepca/protocol/openid-connect/userinfo
      use_pkce: true
      use_refresh_token: true
      signout_redirect_url: https://auth.eoepca-testing.spaceapplications.com/realms/eoepca/protocol/openid-connect/logout?client_id=application-quality-develop-dashboards&response_type=code&post_logout_redirect_uri=https://application-quality.develop.eoepca.org/dashboards/

    server:
      root_url: https://application-quality.develop.eoepca.org/dashboards